#!/usr/bin/env groovy

pipeline {
    agent any
    options {
        ansiColor('xterm')
    }
    environment {
        tfhome="/var/lib/jenkins/tools/org.jenkinsci.plugins.terraform.TerraformInstallation/terraform_0.12.9"
    }
    stages {
        stage('Pre Tests') {
            steps {
                script {
                    sh 'inspec exec test/pre -t aws://eu-west-1'
                }
            }
        }
        stage('TF plan dev') {
            steps {
                script {
                    withEnv(["PATH=${env.tfHome}:${env.PATH}"]) {
                        sh '''
                            terraform init -input=false --backend-config=backend_config/dev.tfvars
                            terraform plan -var-file=./env_vars/dev.tfvars -out=dev.plan -input=false
                        '''
                    }
                }
            }
        }		
        stage('TF apply') {
            steps {
                script {
                    withEnv(["PATH=${env.tfHome}:${env.PATH}"]) {
                        sh '''
                            terraform apply ./dev.plan
                        '''
                    }
                }
            }
        }
        stage('Post Tests') {
            steps {
                script {
                    sh '''
                        inspec exec test/post -t aws://eu-west-1
                    '''
                }
            }
        }
        stage('TF plan prod') {
            steps {
                script {
                    withEnv(["PATH=${env.tfHome}:${env.PATH}"]) {
                        sh '''
                            rm -rf .terraform
                            terraform init -input=false --backend-config=backend_config/prod.tfvars
                            echo "\n======================= Showing PROD Plan =======================\n"
                            terraform plan -var-file=./env_vars/prod.tfvars -out=prod.plan -input=false
                            echo "${env.GIT_BRANCH}"
                        '''
                    }
                }
            }
        }
    }
}
